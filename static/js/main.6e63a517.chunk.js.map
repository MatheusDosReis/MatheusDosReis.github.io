{"version":3,"sources":["components/personal.js","App.js","registerServiceWorker.js","index.js"],"names":["Personal","state","img","projects","name","date","tecnologies","link","react_default","a","createElement","className","src","this","alt","href","map","project","join","rel","target","Component","App","document","title","personal","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6e63a517.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Personal extends Component {\n  state = {\n    img:\n      \"https://scontent-gru2-2.xx.fbcdn.net/v/t1.0-9/46521720_2503871296308715_1703695689600466944_n.jpg?_nc_cat=110&_nc_ht=scontent-gru2-2.xx&oh=087af2ea5a625d54b032b07ca84c3ebb&oe=5D35781E\",\n    projects: [\n      {\n        name: \"Jornal Pelicano\",\n        date: \"Jan 2018\",\n        tecnologies: [\"Quasar\", \"Vue.js\", \"Firebase\", \"Cordova\"],\n        link:\n          \"https://play.google.com/store/apps/details?id=com.cordova.jornalpelicano\"\n      },\n      {\n        name: \"TacticUP\",\n        date: \"Fev 2019\",\n        tecnologies: [\"React.js\", \"Node.js\", \"i18next\"],\n        link: \"https://tacticup.com.br\"\n      }\n    ]\n  };\n  render() {\n    return (\n      <div className=\"personal\">\n        <div className=\"box profile\">\n          <div className=\"name\">\n            Matheus dos Reis de Jesus\n            <span className=\"muted\">Web and Mobile Developer</span>\n          </div>\n          <div className=\"details\">\n            <div className=\"row\">\n              <div className=\"two wide column\">\n                <img\n                  className=\"image\"\n                  src={this.state.img}\n                  alt=\"\"\n                />\n              </div>\n              <div className=\"eight wide column info\">\n                <span>Age: 20</span>\n                <span>\n                  E-mail:{\" \"}\n                  <a href=\"mailto:matheusdrdj@gmail.com\">\n                    matheusdrdj@gmail.com\n                  </a>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"box projects\">\n          <div className=\"title\">Projects</div>\n          <div className=\"tiles\">\n            {this.state.projects.map(project => (\n              <div className=\"tile\">\n                <div className=\"name\">\n                  {project.name}\n                  <span className=\"muted\">{project.date}</span>\n                </div>\n                <div className=\"tecnologies\">\n                  Tecnologies:\n                  <span className=\"muted\">\n                    {project.tecnologies.join(\", \")}\n                  </span>\n                </div>\n                <div className=\"more\">\n                  <a\n                    href={project.link}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    Go to\n                  </a>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"box career\">\n          <div className=\"title\">Career History</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Personal;\n","import React, { Component } from 'react';\n\nimport './css/style.css';\n\nimport Personal from \"./components/personal\"\n\nclass App extends Component {\n  componentWillMount(){\n    document.title=\"Matheus Reis - CV\"\n  }\n  render() {\n    return (\n      <div className=\"App\">\n      <head><title>Matheus Reis - CV</title></head>\n          <Personal/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}